{"version":3,"sources":["images/logo.svg","mainComponents.js","images/icon-close.svg","settings.js","index.js"],"names":["Header","id","src","logo","alt","Nav","exact","to","className","activeClassName","Timer","props","actionWord","action","isStarted","pause","start","value","currentPercentage","text","getSecondsToClockString","fullTime","currentTime","strokeWidth","background","backgroundPadding","styles","buildStyles","pathColor","window","getComputedStyle","document","getElementsByTagName","getPropertyValue","backgroundColor","trailColor","textColor","onClick","seconds","isNaN","NaN","minutesPart","parseInt","toString","secondsPart","length","concat","Settings","setActiveFont","font","setState","selectedFont","setSelectedColorTheme","color","selectedColor","applySettings","pomodoroSeconds","getElementById","shortBreakSeconds","longBreakSeconds","style","setProperty","state","setPomodoroFullTime","setShortBreakFullTime","setLongBreakFullTime","display","fonts","kumbhSans","colorThemes","redTheme","closeIcon","label","justifyContent","width","SelectableCircle","settingState","this","setSettingState","settingStateOption","circleColor","innerTextFontFamily","innerContentClassName","hoverClassName","selectedClassName","robotoSlab","spaceMono","lightBlueTheme","purpleTheme","React","Component","fontFamily","TimeSetter","instanceCount","instanceNumber","htmlFor","type","readOnly","xmlns","height","fill","stroke","strokeOpacity","d","SettingsButton","opacity","App","clearInterval","pomodoroSecondTicker","isPomodoroStarted","pomodoroCurrentTime","pomodoroCurrentPercentage","pomodoroFullTime","startPomodoro","startTime","Math","round","Date","now","setInterval","pomodoroMinuteTicker","pausePomodoro","shortBreakSecondTicker","isShortBreakStarted","shortBreakCurrentTime","shortBreakCurrentPercentage","shortBreakFullTime","startShortBreak","shortBreakMinuteTicker","pauseShortBreak","longBreakSecondTicker","isLongBreakStarted","longBreakCurrentTime","longBreakCurrentPercentage","longBreakFullTime","startLongBreak","longBreakMinuteTicker","pauseLongBreak","path","children","ReactDOM","render"],"mappings":"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","file":"static/js/main.a06f7eb4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7479961e.svg\";","import { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport logo from './images/logo.svg';\r\n\r\nexport function Header() {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<img\r\n\t\t\tid='logo'\r\n\t\t\tsrc={logo}\r\n\t\t\talt=''\r\n\t\t/>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport function Nav() {\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<NavLink exact to='/' className='navItem' activeClassName=\"navItemActive\">\r\n\t\t\t\t<div>pomodoro</div>\r\n\t\t\t</NavLink>\r\n\r\n\t\t\t<NavLink exact to='/shortbreak' className='navItem' activeClassName=\"navItemActive\">\r\n\t\t\t\tshort break\r\n\t\t\t</NavLink>\r\n\r\n\t\t\t<NavLink exact to='/longbreak' className='navItem' activeClassName=\"navItemActive\">\r\n\t\t\t\tlong break\r\n\t\t\t</NavLink>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport function Timer(props) {\r\n\tlet actionWord = null;\r\n\tlet action = null;\r\n\r\n\tif(props.isStarted) {\r\n\t\tactionWord = 'PAUSE';\r\n\t\taction = () => props.pause();\r\n\t} else {\r\n\t\tactionWord = 'START';\r\n\t\taction = () => props.start();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"progressbarBox\">\r\n\t\t\t<CircularProgressbarWithChildren\r\n\t\t\t\tvalue={ props.currentPercentage }\r\n\t\t\t\ttext={ getSecondsToClockString(props.fullTime - props.currentTime) }\r\n\t\t\t\tstrokeWidth={3}\r\n\t\t\t\tbackground\r\n\t\t\t\tbackgroundPadding={3}\r\n\t\t\t\tstyles={buildStyles({\r\n\t\t\t\t\tpathColor: window.getComputedStyle(document.getElementsByTagName('body')[0]).getPropertyValue('--theme-color'),\r\n\t\t\t\t\tbackgroundColor: '#161932',\r\n\t\t\t\t\ttrailColor: 'transparent',\r\n\t\t\t\t\ttextColor: '#D7E0FF',\r\n\t\t\t\t})}>\r\n\t\t\t\t<button onClick={ () => action() } className='startButton'>{actionWord}</button>\r\n\t\t\t</CircularProgressbarWithChildren>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction getSecondsToClockString(seconds) {\r\n    if(isNaN(seconds) || seconds === '') {\r\n    \treturn NaN;\r\n    }\r\n\r\n\tlet minutesPart = parseInt(seconds / 60).toString();\r\n    let secondsPart = (seconds % 60).toString();\r\n\r\n\r\n    if(secondsPart.length === 1) {\r\n    \tif(secondsPart > 0) {\r\n    \t\tsecondsPart = \"0\".concat(secondsPart);\r\n    \t} else {\r\n    \t\tsecondsPart += '0';\r\n    \t}\r\n    }\r\n\r\n    return minutesPart + ':' + secondsPart;\r\n}","export default __webpack_public_path__ + \"static/media/icon-close.79cfecaf.svg\";","import React from 'react';\r\n\r\nimport closeIcon from './images/icon-close.svg';\r\n\r\nimport { fonts, colorThemes } from './index.js';\r\n\r\nexport class Settings extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tselectedFont: fonts.kumbhSans,\r\n\t\t\tselectedColor: colorThemes.redTheme,\r\n\t\t};\r\n\t}\r\n\r\n\tsetActiveFont = (font) => {\r\n\t\tthis.setState({selectedFont: font});\r\n\t}\r\n\r\n\tsetSelectedColorTheme = (color) => {\r\n\t\tthis.setState({selectedColor: color});\r\n\t}\r\n\r\n\tapplySettings = () => {\r\n\t\tlet pomodoroSeconds = document.getElementById('inputTimer1').value * 60;\r\n\t\tlet shortBreakSeconds = document.getElementById('inputTimer2').value * 60;\r\n\t\tlet longBreakSeconds = document.getElementById('inputTimer3').value * 60;\r\n\r\n\t\tdocument.getElementsByTagName('body')[0].style.setProperty('--font-family', this.state.selectedFont);\r\n\t\tdocument.getElementsByTagName('body')[0].style.setProperty('--theme-color', this.state.selectedColor);\r\n\r\n\t\tthis.props.setPomodoroFullTime(pomodoroSeconds);\r\n\t\tthis.props.setShortBreakFullTime(shortBreakSeconds);\r\n\t\tthis.props.setLongBreakFullTime(longBreakSeconds);\r\n\r\n\t\tdocument.getElementById('settingsOverlay').style.display = 'none';\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\t<div id=\"settingsOverlay\">\r\n\t\t\t\t\t<section id=\"settingsWindow\">\r\n\t\t\t\t\t\t<header id=\"settingsHeader\">\r\n\t\t\t\t\t\t\t<span id=\"settingsLabel\">Settings</span>\r\n\t\t\t\t\t\t\t<button id=\"closeSettingsButton\" onClick={() => document.getElementById('settingsOverlay').style.display = 'none'}>\r\n\t\t\t\t\t\t\t\t<img src={closeIcon} alt='' />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</header>\r\n\r\n\t\t\t\t\t\t<span className='settingsSectionName'>TIME (MINUTES)</span> {/* TODO: all settings section nams shuold be give the class \"settingsSectionName\" */}\r\n\t\t\t\t\t\t<div className='settingsSection'>\r\n\t\t\t\t\t\t\t<TimeSetter label='pomodoro' />\r\n\t\t\t\t\t\t\t<TimeSetter label='short break' />\r\n\t\t\t\t\t\t\t<TimeSetter label='long break' />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='settingsSection'>\r\n\t\t\t\t\t\t\t<div className='settingsSectionName'>FONT</div>\r\n\t\t\t\t\t\t\t<div style={{display: 'flex', justifyContent: 'space-between', width: '170px'}}>\r\n\t\t\t\t\t\t\t\t<SelectableCircle\r\n\t\t\t\t\t\t\t\t\tsettingState={this.state.selectedFont}\r\n\t\t\t\t\t\t\t\t\tsetSettingState={this.setActiveFont}\r\n\t\t\t\t\t\t\t\t\tsettingStateOption={fonts.kumbhSans}\r\n\r\n\t\t\t\t\t\t\t\t\tcircleColor='#EFF1FA'\r\n\t\t\t\t\t\t\t\t\tinnerTextFontFamily={fonts.kumbhSans}\r\n\t\t\t\t\t\t\t\t\tinnerContentClassName='fontSettingCircle'\r\n\t\t\t\t\t\t\t\t\thoverClassName='hoverSettingCircle'\r\n\t\t\t\t\t\t\t\t\tselectedClassName='selectedFontCircle'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<SelectableCircle\r\n\t\t\t\t\t\t\t\t\tsettingState={this.state.selectedFont}\r\n\t\t\t\t\t\t\t\t\tsetSettingState={this.setActiveFont}\r\n\t\t\t\t\t\t\t\t\tsettingStateOption={fonts.robotoSlab}\r\n\r\n\t\t\t\t\t\t\t\t\tcircleColor='#EFF1FA'\r\n\t\t\t\t\t\t\t\t\tinnerTextFontFamily={fonts.robotoSlab}\r\n\t\t\t\t\t\t\t\t\tinnerContentClassName='fontSettingCircle'\r\n\t\t\t\t\t\t\t\t\thoverClassName='hoverSettingCircle'\r\n\t\t\t\t\t\t\t\t\tselectedClassName='selectedFontCircle'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<SelectableCircle\r\n\t\t\t\t\t\t\t\t\tsettingState={this.state.selectedFont}\r\n\t\t\t\t\t\t\t\t\tsetSettingState={this.setActiveFont}\r\n\t\t\t\t\t\t\t\t\tsettingStateOption={fonts.spaceMono}\r\n\r\n\t\t\t\t\t\t\t\t\tcircleColor='#EFF1FA'\r\n\t\t\t\t\t\t\t\t\tinnerTextFontFamily={fonts.spaceMono}\r\n\t\t\t\t\t\t\t\t\tinnerContentClassName='fontSettingCircle'\r\n\t\t\t\t\t\t\t\t\thoverClassName='hoverSettingCircle'\r\n\t\t\t\t\t\t\t\t\tselectedClassName='selectedFontCircle'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='settingsSection'>\r\n\t\t\t\t\t\t\t<div className='settingsSectionName'>COLOR</div>\r\n\t\t\t\t\t\t\t<div style={{display: 'flex', justifyContent: 'space-between', width: '170px'}}>\r\n\t\t\t\t\t\t\t\t<SelectableCircle\r\n\t\t\t\t\t\t\t\t\tsettingState={this.state.selectedColor}\r\n\t\t\t\t\t\t\t\t\tsetSettingState={this.setSelectedColorTheme}\r\n\t\t\t\t\t\t\t\t\tsettingStateOption={colorThemes.redTheme}\r\n\r\n\t\t\t\t\t\t\t\t\tcircleColor={colorThemes.redTheme}\r\n\t\t\t\t\t\t\t\t\thoverClassName='hoverSettingCircle'\r\n\t\t\t\t\t\t\t\t\tselectedClassName='selectedColorCircle'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<SelectableCircle\r\n\t\t\t\t\t\t\t\t\tsettingState={this.state.selectedColor}\r\n\t\t\t\t\t\t\t\t\tsetSettingState={this.setSelectedColorTheme}\r\n\t\t\t\t\t\t\t\t\tsettingStateOption={colorThemes.lightBlueTheme}\r\n\r\n\t\t\t\t\t\t\t\t\tcircleColor={colorThemes.lightBlueTheme}\r\n\t\t\t\t\t\t\t\t\thoverClassName='hoverSettingCircle'\r\n\t\t\t\t\t\t\t\t\tselectedClassName='selectedColorCircle'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<SelectableCircle\r\n\t\t\t\t\t\t\t\t\tsettingState={this.state.selectedColor}\r\n\t\t\t\t\t\t\t\t\tsetSettingState={this.setSelectedColorTheme}\r\n\t\t\t\t\t\t\t\t\tsettingStateOption={colorThemes.purpleTheme}\r\n\r\n\t\t\t\t\t\t\t\t\tcircleColor={colorThemes.purpleTheme}\r\n\t\t\t\t\t\t\t\t\thoverClassName='hoverSettingCircle'\r\n\t\t\t\t\t\t\t\t\tselectedClassName='selectedColorCircle'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<button id='applySettingsButton' onClick={() => this.applySettings()}>\r\n\t\t\t\t\t\t\tApply\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction SelectableCircle(props) {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tonClick={() => {\r\n\t\t\t\tprops.setSettingState(props.settingStateOption);\r\n\t\t\t}}\r\n\t\t\tclassName={\r\n\t\t\t\t'coloredCircle '\r\n\t\t\t\t+ (props.innerContentClassName ?\r\n\t\t\t\t\tprops.innerContentClassName + ' ' : '')\r\n\t\t\t\t+ (props.hoverClassName ?\r\n\t\t\t\t\tprops.hoverClassName + ' ' : '')\r\n\t\t\t\t+ (props.settingState === props.settingStateOption ?\r\n\t\t\t\t\tprops.selectedClassName + ' ' : '')\r\n\t\t\t}\r\n\t\t\tstyle={{backgroundColor: props.circleColor, fontFamily: props.innerTextFontFamily}}\r\n\t\t>\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nclass TimeSetter extends React.Component { // TODO: maybe add a clue that TimeSetter includes a label\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalue: 0,\r\n\t\t};\r\n\t\tTimeSetter.instanceCount = (TimeSetter.instanceCount === 0) ? 0 : (TimeSetter.instanceCount || 0) + 1;\r\n\t\tthis.instanceNumber = TimeSetter.instanceCount;\r\n\t\t/* instanceNumber fixes instanceCount for the instance.\r\n\t\tNeeded because instanceCount changes as new instances are created\r\n\t\tand cannot be used to rerender elements that use it to set its ID\r\n\t\t*/\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='timeSetter'>\r\n\t\t\t\t<label htmlFor={'inputTimer' + this.instanceNumber} className='inputTimerLabel'>{this.props.label}</label> { /* should input be renamed to \"timerInput\"? */ }\r\n\t\t\t\t<div className='inputTimerBox'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid={'inputTimer' + this.instanceNumber}\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={this.state.value} \r\n\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\tclassName='inputTimer'\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button onClick={() => this.setState({value: this.state.value + 1,})} className='IncremDecremBtn'>\r\n\t\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\t\twidth=\"14\"\r\n\t\t\t\t\t\t\t\theight=\"7\">\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\t\t\t\tstroke=\"#1E213F\"\r\n\t\t\t\t\t\t\t\t\tstrokeOpacity=\".25\"\r\n\t\t\t\t\t\t\t\t\tstrokeWidth=\"2.5\"\r\n\t\t\t\t\t\t\t\t\td=\"M1 6l6-4 6 4\"/>\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button onClick={() => {\r\n\t\t\t\t\t\t\tif(this.state.value - 1 >= 0) {\r\n\t\t\t\t\t\t\t\tthis.setState({value: this.state.value - 1,})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}} className='IncremDecremBtn'>\r\n\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"7\">\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\t\t\t\tstroke=\"#1E213F\"\r\n\t\t\t\t\t\t\t\t\tstrokeOpacity=\".25\"\r\n\t\t\t\t\t\t\t\t\tstrokeWidth=\"2.5\"\r\n\t\t\t\t\t\t\t\t\td=\"M1 1l6 4 6-4\"/>\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport function SettingsButton() {\r\n\treturn (\r\n\t\t<button id='settingsButton' onClick={() => document.getElementById('settingsOverlay').style.display = 'flex'}>\r\n\t\t\t<svg\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\twidth=\"28\"\r\n\t\t\t\theight=\"28\">\r\n\t\t\t\t<path\r\n\t\t\t\t\tfill=\"#D7E0FF\"\r\n\t\t\t\t\td=\"M26.965 17.682l-2.927-2.317c.055-.448.097-.903.097-1.365 0-.462-.042-.917-.097-1.365l2.934-2.317a.702.702 0 00.167-.896l-2.775-4.851a.683.683 0 00-.847-.301l-3.454 1.407a10.506 10.506 0 00-2.345-1.379l-.52-3.71A.716.716 0 0016.503 0h-5.55a.703.703 0 00-.687.588l-.52 3.71c-.847.357-1.63.819-2.345 1.379L3.947 4.27a.691.691 0 00-.847.301L.325 9.422a.705.705 0 00.167.896l2.927 2.317c-.055.448-.097.903-.097 1.365 0 .462.042.917.097 1.365L.492 17.682a.702.702 0 00-.167.896L3.1 23.429a.683.683 0 00.847.301L7.4 22.323a10.506 10.506 0 002.345 1.379l.52 3.71c.056.329.34.588.687.588h5.55a.703.703 0 00.687-.588l.52-3.71c.847-.357 1.631-.819 2.346-1.379l3.454 1.407c.313.119.673 0 .847-.301l2.775-4.851a.705.705 0 00-.167-.896zM13.73 18.9c-2.685 0-4.857-2.191-4.857-4.9 0-2.709 2.172-4.9 4.857-4.9 2.684 0 4.856 2.191 4.856 4.9 0 2.71-2.172 4.9-4.856 4.9z\"\r\n\t\t\t\t\topacity=\".5\"\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</button>\r\n\t);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { Route, HashRouter } from 'react-router-dom';\r\n\r\nimport { Header, Nav, Timer } from './mainComponents.js';\r\nimport { Settings, SettingsButton } from './settings.js';\r\n\r\nimport './scss/index.scss';\r\n\r\nexport const fonts = {\r\n\tkumbhSans: 'Kumbh Sans',\r\n\trobotoSlab: 'Roboto Slab',\r\n\tspaceMono: 'Space Mono',\r\n};\r\n\r\nexport const colorThemes = { // TODO: colorTheme(s) should be theme(s)Color in some places\r\n\tredTheme: '#F87070',\r\n\tlightBlueTheme: '#70F3F8',\r\n\tpurpleTheme: '#D881F8',\r\n};\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tpomodoroFullTime: 60 * 25,\r\n\t\t\tpomodoroCurrentTime: 0,\r\n\t\t\tpomodoroCurrentPercentage: 0,\r\n\t\t\tisPomodoroStarted: false,\r\n\r\n\t\t\tshortBreakFullTime: 60 * 5,\r\n\t\t\tshortBreakCurrentTime: 0,\r\n\t\t\tshortBreakCurrentPercentage: 0,\r\n\t\t\tisShortBreakStarted: false,\r\n\r\n\t\t\tlongBreakFullTime: 60 * 15,\r\n\t\t\tlongBreakCurrentTime: 0,\r\n\t\t\tlongBreakCurrentPercentage: 0,\r\n\t\t\tisLongBreakStarted: false,\r\n\t\t};\r\n\t\tthis.pomodoroSecondTicker = null;\r\n\t\tthis.pomodoroMinuteTicker = null;\r\n\t\tthis.shortBreakSecondTicker = null;\r\n\t\tthis.shortBreakMinuteTicker = null;\r\n\t\tthis.longBreakSecondTicker = null;\r\n\t\tthis.longBreakMinuteTicker = null;\r\n\t}\r\n\r\n\tsetPomodoroFullTime = (seconds) => {\r\n\t\tclearInterval(this.pomodoroSecondTicker);\r\n\t\tthis.setState({isPomodoroStarted: false});\r\n\t\tthis.setState({pomodoroCurrentTime: 0});\r\n\t\tthis.setState({pomodoroCurrentPercentage: 0});\r\n\r\n\t\tthis.setState({pomodoroFullTime: seconds});\r\n\t}\r\n\r\n\tstartPomodoro = () => {\r\n\t\tif(!this.state.isPomodoroStarted) {\r\n\t\t\tthis.setState({isPomodoroStarted: true});\r\n\r\n\t\t\tlet startTime = Math.round(Date.now() / 1000) - this.state.pomodoroCurrentTime;\r\n\t\t\t// this subtraction prevents skipping time that elapsed after pause after resume\r\n\t\t\t// I don't fully understand why\r\n\r\n\t\t\tthis.pomodoroSecondTicker = setInterval(() => {\r\n\t\t\t\tlet currentTime = Math.round(Date.now() / 1000) - startTime;\r\n\t\t\t\tthis.setState({pomodoroCurrentTime: currentTime});\r\n\r\n\t\t\t\tif(currentTime === this.state.pomodoroFullTime) {\r\n\t\t\t\t\tclearInterval(this.pomodoroSecondTicker);\r\n\t\t\t\t}\r\n\t\t\t}, 1 * 100); // 100 because it allows to include ms differences between pauses\r\n\r\n\t\t\tthis.pomodoroMinuteTicker = setInterval(() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tpomodoroCurrentPercentage: (this.state.pomodoroCurrentTime / this.state.pomodoroFullTime) * 100,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(this.state.pomodoroCurrentPercentage >= 100) {\r\n\t\t\t\t\tclearInterval(this.pomodoroMinuteTicker);\r\n\t\t\t\t}\r\n\t\t\t}, 1 * 100);\r\n\t\t}\r\n\t}\r\n\r\n\tpausePomodoro = () => {\r\n\t\tclearInterval(this.pomodoroSecondTicker);\r\n\t\tclearInterval(this.pomodoroMinuteTicker);\r\n\t\tthis.setState({isPomodoroStarted: false});\r\n\t}\r\n\r\n\r\n\tsetShortBreakFullTime = (seconds) => {\r\n\t\tclearInterval(this.shortBreakSecondTicker);\r\n\t\tthis.setState({isShortBreakStarted: false});\r\n\t\tthis.setState({shortBreakCurrentTime: 0});\r\n\t\tthis.setState({shortBreakCurrentPercentage: 0});\r\n\r\n\t\tthis.setState({shortBreakFullTime: seconds});\r\n\t}\r\n\r\n\tstartShortBreak = () => {\r\n\t\tif(!this.state.isShortBreakStarted) {\r\n\t\t\tthis.setState({isShortBreakStarted: true});\r\n\r\n\t\t\tlet startTime = Math.round(Date.now() / 1000)  - this.state.shortBreakCurrentTime;\r\n\r\n\t\t\tthis.shortBreakSecondTicker = setInterval(() => {\r\n\t\t\t\tlet currentTime = Math.round(Date.now() / 1000) - startTime;\r\n\t\t\t\tthis.setState({shortBreakCurrentTime: currentTime});\r\n\r\n\t\t\t\tif(currentTime === this.state.shortBreakFullTime) {\r\n\t\t\t\t\tclearInterval(this.shortBreakSecondTicker);\r\n\t\t\t\t}\r\n\t\t\t}, 1 * 100);\r\n\r\n\t\t\tthis.shortBreakMinuteTicker = setInterval(() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tshortBreakCurrentPercentage: (this.state.shortBreakCurrentTime / this.state.shortBreakFullTime) * 100,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(this.state.shortBreakCurrentPercentage >= 100) {\r\n\t\t\t\t\tclearInterval(this.shortBreakMinuteTicker);\r\n\t\t\t\t}\r\n\t\t\t}, 1 * 100);\r\n\t\t}\r\n\t}\r\n\r\n\tpauseShortBreak = () => {\r\n\t\tclearInterval(this.shortBreakSecondTicker);\r\n\t\tclearInterval(this.shortBreakMinuteTicker);\r\n\t\tthis.setState({isShortBreakStarted: false});\r\n\t}\r\n\r\n\r\n\tsetLongBreakFullTime = (seconds) => {\r\n\t\tclearInterval(this.longBreakSecondTicker);\r\n\t\tthis.setState({isLongBreakStarted: false});\r\n\t\tthis.setState({longBreakCurrentTime: 0});\r\n\t\tthis.setState({longBreakCurrentPercentage: 0});\r\n\r\n\t\tthis.setState({longBreakFullTime: seconds});\r\n\t}\r\n\r\n\tstartLongBreak = () => {\r\n\t\tif(!this.state.isLongBreakStarted) {\r\n\t\t\tthis.setState({isLongBreakStarted: true});\r\n\r\n\t\t\tlet startTime = Math.round(Date.now() / 1000) - this.state.longBreakCurrentTime;\r\n\r\n\t\t\tthis.longBreakSecondTicker = setInterval(() => {\r\n\t\t\t\tlet currentTime = Math.round(Date.now() / 1000) - startTime;\r\n\t\t\t\tthis.setState({longBreakCurrentTime: currentTime});\r\n\r\n\t\t\t\tif(currentTime === this.state.longBreakFullTime) {\r\n\t\t\t\t\tclearInterval(this.longBreakSecondTicker);\r\n\t\t\t\t}\r\n\t\t\t}, 1 * 100);\r\n\r\n\t\t\tthis.longBreakMinuteTicker = setInterval(() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tlongBreakCurrentPercentage: (this.state.longBreakCurrentTime / this.state.longBreakFullTime) * 100,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(this.state.longBreakCurrentPercentage >= 100) {\r\n\t\t\t\t\tclearInterval(this.longBreakMinuteTicker);\r\n\t\t\t\t}\r\n\t\t\t}, 1 * 100);\r\n\t\t}\r\n\t}\r\n\r\n\tpauseLongBreak = () => {\r\n\t\tclearInterval(this.longBreakSecondTicker);\r\n\t\tclearInterval(this.longBreakMinuteTicker);\r\n\t\tthis.setState({isLongBreakStarted: false});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<HashRouter>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Nav />\r\n\r\n\t\t\t\t<Route exact path='/'\r\n\t\t\t\t\tchildren={<Timer\r\n\t\t\t\t\t\tfullTime={this.state.pomodoroFullTime}\r\n\t\t\t\t\t\tcurrentTime={this.state.pomodoroCurrentTime}\r\n\t\t\t\t\t\tcurrentPercentage={this.state.pomodoroCurrentPercentage}\r\n\t\t\t\t\t\tstart={this.startPomodoro}\r\n\t\t\t\t\t\tpause={this.pausePomodoro}\r\n\t\t\t\t\t\tisStarted={this.state.isPomodoroStarted}\r\n\t\t\t\t\t\t/>}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route exact path='/shortbreak'\r\n\t\t\t\t\tchildren={<Timer\r\n\t\t\t\t\t\tfullTime={this.state.shortBreakFullTime}\r\n\t\t\t\t\t\tcurrentTime={this.state.shortBreakCurrentTime}\r\n\t\t\t\t\t\tcurrentPercentage={this.state.shortBreakCurrentPercentage}\r\n\t\t\t\t\t\tstart={this.startShortBreak}\r\n\t\t\t\t\t\tpause={this.pauseShortBreak}\r\n\t\t\t\t\t\tisStarted={this.state.isShortBreakStarted}\r\n\t\t\t\t\t\t/>}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route exact path='/longbreak'\r\n\t\t\t\t\tchildren={<Timer\r\n\t\t\t\t\t\tfullTime={this.state.longBreakFullTime}\r\n\t\t\t\t\t\tcurrentTime={this.state.longBreakCurrentTime}\r\n\t\t\t\t\t\tcurrentPercentage={this.state.longBreakCurrentPercentage}\r\n\t\t\t\t\t\tstart={this.startLongBreak}\r\n\t\t\t\t\t\tpause={this.pauseLongBreak}\r\n\t\t\t\t\t\tisStarted={this.state.isLongBreakStarted}\r\n\t\t\t\t\t\t/>}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<SettingsButton />\r\n\r\n\t\t\t\t<Settings\r\n\t\t\t\t\tfullTime={this.state.pomodoroFullTime}\r\n\t\t\t\t\tsetPomodoroFullTime={this.setPomodoroFullTime}\r\n\t\t\t\t\tsetShortBreakFullTime={this.setShortBreakFullTime}\r\n\t\t\t\t\tsetLongBreakFullTime={this.setLongBreakFullTime}\r\n\t\t\t\t/>\r\n\t\t\t</HashRouter>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}